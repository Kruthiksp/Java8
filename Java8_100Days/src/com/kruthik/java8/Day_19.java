package com.kruthik.java8;

import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

import com.kruthik.java8.entities.Item;
import com.kruthik.java8.entities.Order;

/*
 * 
 * 	You are given a list of Order objects. Each Order contains a list of Items.
 * 	Generate a Map<String, Double> where:
 * 		key -> item name
 * 		value -> total revenue generated by that item(price*quantity)
 * 
 */
public class Day_19 {

	public static void main(String[] args) {

		List<Order> orders = initializer();

		Map<String, Double> collect = orders.stream().flatMap(order -> order.getItems().stream())
				.collect(Collectors.groupingBy(Item::getName, LinkedHashMap::new,
						Collectors.summingDouble(item -> item.getPrice() * item.getQuantity())));

		System.out.println(collect);

	}

	public static List<Order> initializer() {
		Item i1 = new Item("Pen", 10, 2);
		Item i2 = new Item("Notebook", 50, 1);
		Item i3 = new Item("Pen", 10, 3);
		Item i4 = new Item("Pencil", 5, 5);

		Order o1 = new Order(1, Arrays.asList(i1, i2));
		Order o2 = new Order(2, Arrays.asList(i3, i4));

		return Arrays.asList(o1, o2);
	}
}
